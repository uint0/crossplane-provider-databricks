---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusters.cluster.databricks.upbound.io
spec:
  group: cluster.databricks.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - databricks
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  applyPolicyDefaultValues:
                    type: boolean
                  autoscale:
                    items:
                      properties:
                        maxWorkers:
                          type: number
                        minWorkers:
                          type: number
                      type: object
                    type: array
                  autoterminationMinutes:
                    type: number
                  awsAttributes:
                    items:
                      properties:
                        availability:
                          type: string
                        ebsVolumeCount:
                          type: number
                        ebsVolumeSize:
                          type: number
                        ebsVolumeType:
                          type: string
                        firstOnDemand:
                          type: number
                        instanceProfileArn:
                          type: string
                        spotBidPricePercent:
                          type: number
                        zoneId:
                          type: string
                      type: object
                    type: array
                  azureAttributes:
                    items:
                      properties:
                        availability:
                          type: string
                        firstOnDemand:
                          type: number
                        spotBidMaxPrice:
                          type: number
                      type: object
                    type: array
                  clusterId:
                    type: string
                  clusterLogConf:
                    items:
                      properties:
                        dbfs:
                          items:
                            properties:
                              destination:
                                type: string
                            required:
                            - destination
                            type: object
                          type: array
                        s3:
                          items:
                            properties:
                              cannedAcl:
                                type: string
                              destination:
                                type: string
                              enableEncryption:
                                type: boolean
                              encryptionType:
                                type: string
                              endpoint:
                                type: string
                              kmsKey:
                                type: string
                              region:
                                type: string
                            required:
                            - destination
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterMountInfo:
                    items:
                      properties:
                        localMountDirPath:
                          type: string
                        networkFilesystemInfo:
                          items:
                            properties:
                              mountOptions:
                                type: string
                              serverAddress:
                                type: string
                            required:
                            - serverAddress
                            type: object
                          type: array
                        remoteMountDirPath:
                          type: string
                      required:
                      - localMountDirPath
                      - networkFilesystemInfo
                      type: object
                    type: array
                  customTags:
                    additionalProperties:
                      type: string
                    type: object
                  dataSecurityMode:
                    type: string
                  dockerImage:
                    items:
                      properties:
                        basicAuth:
                          items:
                            properties:
                              passwordSecretRef:
                                description: A SecretKeySelector is a reference to
                                  a secret key in an arbitrary namespace.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              username:
                                type: string
                            required:
                            - passwordSecretRef
                            - username
                            type: object
                          type: array
                        url:
                          type: string
                      required:
                      - url
                      type: object
                    type: array
                  driverInstancePoolId:
                    type: string
                  driverNodeTypeId:
                    type: string
                  enableElasticDisk:
                    type: boolean
                  enableLocalDiskEncryption:
                    type: boolean
                  gcpAttributes:
                    items:
                      properties:
                        availability:
                          type: string
                        bootDiskSize:
                          type: number
                        googleServiceAccount:
                          type: string
                        usePreemptibleExecutors:
                          type: boolean
                        zoneId:
                          type: string
                      type: object
                    type: array
                  idempotencyToken:
                    type: string
                  initScripts:
                    items:
                      properties:
                        abfss:
                          items:
                            properties:
                              destination:
                                type: string
                            type: object
                          type: array
                        dbfs:
                          items:
                            properties:
                              destination:
                                type: string
                            required:
                            - destination
                            type: object
                          type: array
                        file:
                          items:
                            properties:
                              destination:
                                type: string
                            type: object
                          type: array
                        gcs:
                          items:
                            properties:
                              destination:
                                type: string
                            type: object
                          type: array
                        s3:
                          items:
                            properties:
                              cannedAcl:
                                type: string
                              destination:
                                type: string
                              enableEncryption:
                                type: boolean
                              encryptionType:
                                type: string
                              endpoint:
                                type: string
                              kmsKey:
                                type: string
                              region:
                                type: string
                            required:
                            - destination
                            type: object
                          type: array
                      type: object
                    type: array
                  instancePoolId:
                    type: string
                  isPinned:
                    type: boolean
                  library:
                    items:
                      properties:
                        cran:
                          items:
                            properties:
                              package:
                                type: string
                              repo:
                                type: string
                            required:
                            - package
                            type: object
                          type: array
                        egg:
                          type: string
                        jar:
                          type: string
                        maven:
                          items:
                            properties:
                              coordinates:
                                type: string
                              exclusions:
                                items:
                                  type: string
                                type: array
                              repo:
                                type: string
                            required:
                            - coordinates
                            type: object
                          type: array
                        pypi:
                          items:
                            properties:
                              package:
                                type: string
                              repo:
                                type: string
                            required:
                            - package
                            type: object
                          type: array
                        whl:
                          type: string
                      type: object
                    type: array
                  nodeTypeId:
                    type: string
                  numWorkers:
                    type: number
                  policyId:
                    type: string
                  runtimeEngine:
                    type: string
                  singleUserName:
                    type: string
                  sparkConf:
                    additionalProperties:
                      type: string
                    type: object
                  sparkEnvVars:
                    additionalProperties:
                      type: string
                    type: object
                  sparkVersion:
                    type: string
                  sshPublicKeys:
                    items:
                      type: string
                    type: array
                  workloadType:
                    items:
                      properties:
                        clients:
                          items:
                            properties:
                              jobs:
                                type: boolean
                              notebooks:
                                type: boolean
                            type: object
                          type: array
                      required:
                      - clients
                      type: object
                    type: array
                required:
                - sparkVersion
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  defaultTags:
                    additionalProperties:
                      type: string
                    type: object
                  id:
                    type: string
                  state:
                    type: string
                  url:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
